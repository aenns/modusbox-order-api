<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" 
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
	http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
	http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd 
	http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    
    <flow name="api-main">
        <http:listener config-ref="api-httpListenerConfig" path="${http.url}">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body>#[payload]</http:body>
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="orders-api-config" />
        <error-handler ref="defaultApiKitHandler"/>
    </flow>
   
    <flow name="get:\order\(orderId):orders-api-config">
        <ee:transform xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" doc:id="463f6435-6aee-4b85-bb26-7330ea23288c">
            <ee:variables>
				<ee:set-variable resource="dwl/extract-order-id.dwl" variableName="orderId" />
            </ee:variables>
        </ee:transform>
        <logger category="${logging.category}" level="INFO" message="get:\order\(orderId):orders-api-config. #['orderId = ' ++ vars.orderId]" />
		
		<flow-ref name="queryOrderTable" target="orderQueryResult"/>
		
		<choice>
			<when expression="#[sizeOf(vars.orderQueryResult) &gt; 0]">
				<flow-ref name="queryItemsTable"/>	
				<flow-ref name="displayQueryResults"/>		
			</when>	
			<otherwise>
				<flow-ref name="indicateNoResult"/>
			</otherwise>	
		</choice>	
	</flow>
	<sub-flow name="queryItemsTable">
		<db:select target="itemsResult" doc:name="Select" doc:id="05b70eed-728b-4db4-b3cb-78d42db4b8ea" config-ref="Database_Config">
			<db:sql>select ITEMS.ItemID, ITEMS.ItemName, ITEMS.ItemCost from OrdersDb.Items ITEMS, OrdersDb.OrderItems ORDITEMS where ORDITEMS.OrderID = :orderId and ORDITEMS.ItemID = ITEMS.ItemID</db:sql>
			<db:input-parameters><![CDATA[
      			#[{'orderId' : vars.orderId}]
    			]]></db:input-parameters>
		</db:select>
	</sub-flow>
	<sub-flow name="indicateNoResult">
		<set-variable variableName="httpStatus" value="204" />
	</sub-flow>
    <sub-flow name="queryOrderTable">
    		<db:select doc:name="Select" doc:id="05b70eed-728b-4db4-b3cb-78d42db4b8ea" config-ref="Database_Config">
			<db:sql>select ORD.OrderID, ORD.CustomerName, ORD.PlacementDate from OrdersDb.Orders ORD where ORD.OrderID = :orderId</db:sql>
			<db:input-parameters><![CDATA[
      			#[{'orderId' : vars.orderId}]
    			]]></db:input-parameters>
		</db:select>
    </sub-flow>
    <sub-flow name="displayQueryResults">
    		<ee:transform doc:name="Transform Message" doc:id="095465a9-92bd-4946-8900-8d795619051f" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	OrderID: vars.orderQueryResult[0].OrderID,
	CustomerName: vars.orderQueryResult[0].CustomerName,
	PlacementDate: vars.orderQueryResult[0].PlacementDate,
	Items: vars.itemsResult
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </sub-flow>
</mule>
